もちろんです！🐰
ご要望に沿って、**Pythonファイルとしてそのまま実行できる形式**に整えました。型ヒントも消費税計算関数も含め、各Docstringスタイルをまとめています。

---

```python
# -*- coding: utf-8 -*-
"""
🐰 Python 型ヒント 5大Docstringスタイル & 消費税計算
----------------------------------------
このファイルは、Pythonの型ヒントと代表的な5つのDocstringスタイルで
消費税計算関数をまとめたチートシートです。
"""

# ----------------------------------------
# 型ヒントとは
# 引数や戻り値の型を明示する書き方
# Pythonは動的型付けですが、型ヒントをつけると可読性・補完・静的解析が向上
# 基本書き方:
# def 関数名(引数名: 型, ...) -> 戻り値の型:
#     処理
#     return 戻り値

# ----------------------------------------
# 1️⃣ PEP 257 + 型ヒント
def calc_tax_pep257(price: float, tax_rate: float = 0.10) -> float:
    """価格から消費税を計算して合計金額を返す."""
    return price * (1 + tax_rate)

# ----------------------------------------
# 2️⃣ Googleスタイル + 型ヒント
def calc_tax_google(price: float, tax_rate: float = 0.10) -> float:
    """
    価格から消費税を計算して合計金額を返す

    Args:
        price (float): 商品の価格
        tax_rate (float, optional): 消費税率。デフォルトは10%

    Returns:
        float: 消費税込みの合計金額
    """
    return price * (1 + tax_rate)

# ----------------------------------------
# 3️⃣ NumPyスタイル + 型ヒント
def calc_tax_numpy(price: float, tax_rate: float = 0.10) -> float:
    """
    価格から消費税を計算して合計金額を返す

    Parameters
    ----------
    price : float
        商品の価格
    tax_rate : float, optional
        消費税率。デフォルトは0.10

    Returns
    -------
    float
        消費税込みの合計金額
    """
    return price * (1 + tax_rate)

# ----------------------------------------
# 4️⃣ reST/Sphinxスタイル + 型ヒント
def calc_tax_rest(price: float, tax_rate: float = 0.10) -> float:
    """
    価格から消費税を計算して合計金額を返す

    :param price: 商品の価格
    :type price: float
    :param tax_rate: 消費税率（デフォルト0.10）
    :type tax_rate: float
    :return: 消費税込みの合計金額
    :rtype: float
    """
    return price * (1 + tax_rate)

# ----------------------------------------
# 5️⃣ Epytext（非推奨）+ 型ヒント
def calc_tax_epytext(price: float, tax_rate: float = 0.10) -> float:
    """
    @param price: 商品の価格
    @type price: float
    @param tax_rate: 消費税率
    @type tax_rate: float
    @return: 消費税込みの合計金額
    @rtype: float
    """
    return price * (1 + tax_rate)

# ----------------------------------------
# ⚡ 型ヒントのポイントまとめ
print("=== 型ヒント説明 ===")
print("price: float           -> 引数 price は float 型")
print("tax_rate: float = 0.10 -> 引数 tax_rate は float 型、デフォルト値 0.10")
print("-> float               -> 関数の戻り値は float 型")
print()

# ----------------------------------------
# テスト用の呼び出し例
if __name__ == "__main__":
    price = 1000
    tax = 0.10

    print("PEP257式:", calc_tax_pep257(price, tax))
    print("Google式:", calc_tax_google(price, tax))
    print("NumPy式:", calc_tax_numpy(price, tax))
    print("reST式:", calc_tax_rest(price, tax))
    print("Epytext式:", calc_tax_epytext(price, tax))
```

---

このファイルをそのまま `.py` で保存して実行すれば、**各関数の計算結果と型ヒントの説明**が表示されます。

💡 補足:
`from typing import List, Dict` を使えば、リストや辞書の型ヒントも簡単に追加可能です。

---

もし希望なら、このファイルを **さらに「Qiita風チートシート」向けにコメント付きで整理したバージョン** にもできます。作りますか？
